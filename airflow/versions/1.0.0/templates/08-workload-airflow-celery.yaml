kind: workload
name: {{ .Values.airflow.celeryWorkerName }}
description: {{ .Values.airflow.celeryWorkerName }}
gvc: {{ .Values.gvc.name }}
tags:
  {{- include "pg.tags" . | nindent 4 }}
spec:
  type: stateful
  identityLink: //identity/{{ include "pg.name" . }}
  containers:
    - name: {{ .Values.airflow.celeryWorkerName }}
      cpu: {{ .Values.airflow.celeryWorker.resources.cpu }}
      memory: {{ .Values.airflow.celeryWorker.resources.memory }}
      env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: AIRFLOW__API_AUTH__JWT_EXPIRATION_DELTA
          value: "{{ .Values.airflow.auth.jwtExpirationDelta }}"
        - name: AIRFLOW__API_AUTH__JWT_REFRESH_THRESHOLD
          value: "{{ .Values.airflow.auth.jwtRefreshThreshold }}"
        - name: POSTGRES_USERNAME
          value: cpln://secret/{{ include "pg.secretName" . }}.username         
        - name: POSTGRES_PASSWORD 
          value: cpln://secret/{{ include "pg.secretName" . }}.password          
        - name: AIRFLOW__API_AUTH__JWT_SECRET
          value: {{ .Values.airflow.auth.jwtSecret }}
        - name: AIRFLOW__API__BASE_URL
          value: http://{{ .Values.airflow.webserverName}}:{{ .Values.airflow.webPort }}
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://{{ .Values.redis.name }}.{{ .Values.gvc.name }}.cpln.local
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@{{ .Values.postgres.name }}:5432/{{ .Values.postgres.config.database }}
        {{- if .Values.keda.enabled }}
        - name: AIRFLOW__CELERY__WORKER_CONCURRENCY
          value: "{{ .Values.airflow.celery.workerConcurrency }}"
        {{- end }}
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /opt/airflow/dags
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@{{ .Values.postgres.name }}:5432/{{ .Values.postgres.config.database }}
        - name: AIRFLOW__LOGGING__REMOTE_LOGGING
          value: 'False'
      image: controlplanecorporation/celery:v1
      inheritEnv: false
      ports: []
      volumes:
        - path: /opt/airflow
          recoveryPolicy: retain
          uri: cpln://volumeset/{{ .Values.airflow.webserverName }}
  {{- if .Values.keda.enabled }}
  defaultOptions:
      autoscaling:
        keda:
          cooldownPeriod: {{ .Values.keda.cooldownPeriod }}
          initialCooldownPeriod: {{ .Values.keda.initialCooldownPeriod }}
          pollingInterval: {{ .Values.keda.pollingInterval }}
          triggers:
            - name: redis-trigger
              type: redis
              metadata:
                address: {{ .Values.redis.name }}.{{ .Values.gvc.name }}.cpln.local:6379
                listLength: "{{ .Values.keda.listLength }}"
                listName: default
        maxConcurrency: 0
        maxScale: {{ .Values.keda.maxScale }}
        metric: keda
        minScale: {{ .Values.keda.minScale }}
        scaleToZeroDelay: {{ .Values.keda.scaleToZeroDelay }}
      capacityAI: false
      debug: false
      suspend: false
      timeoutSeconds: 5
  {{- end }}        
  firewallConfig:
    {{- if or .Values.airflow.celeryWorker.inboundAllowCIDR .Values.airflow.celeryWorker.outboundAllowCIDR }}
    external:   
      {{- if .Values.airflow.celeryWorker.inboundAllowCIDR }}
      inboundAllowCIDR:
        {{- range .Values.airflow.celeryWorker.inboundAllowCIDR }}
        - {{ . | quote }}
        {{- end }}
      {{- end }}

      {{- if .Values.airflow.celeryWorker.outboundAllowCIDR }}
      outboundAllowCIDR:
        {{- range .Values.airflow.celeryWorker.outboundAllowCIDR }}
        - {{ . | quote }}
        {{- end }}
      {{- end }}
    {{- end }} 
    internal:
      inboundAllowType: same-gvc
      inboundAllowWorkload: []
  loadBalancer:
    direct:
      enabled: false
      ports: []
    replicaDirect: false
  supportDynamicTags: false
