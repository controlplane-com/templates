kind: workload
name: {{ .Values.airflow.celeryWorkerName }}
description: {{ .Values.airflow.celeryWorkerName }}
gvc: {{ .Values.gvc.name }}
tags: {}
spec:
  type: stateful
  containers:
    - name: {{ .Values.airflow.celeryWorkerName }}
      cpu: {{ .Values.airflow.celeryWorker.resources.cpu }}
      memory: {{ .Values.airflow.celeryWorker.resources.memory }}
      env:
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: AIRFLOW__API_AUTH__JWT_EXPIRATION_DELTA
          value: "{{ .Values.airflow.auth.jwtExpirationDelta }}"
        - name: AIRFLOW__API_AUTH__JWT_REFRESH_THRESHOLD
          value: "{{ .Values.airflow.auth.jwtRefreshThreshold }}"
        - name: AIRFLOW__API_AUTH__JWT_SECRET
          value: P5lsoKdzuWsN7NcZYu4TlwVp9pRKdpHjJ902aiy05K6HvDja7r+1y6tOITuaAQHv
        - name: AIRFLOW__API__BASE_URL
          value: http://{{ .Values.airflow.webserverName}}:{{ .Values.airflow.webPort }}
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://{{ .Values.redis.name }}.{{ .Values.gvc.name }}.cpln.local
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://{{ .Values.postgres.config.username }}:{{ .Values.postgres.config.password }}@{{ .Values.postgres.name }}:5432/test
        {{- if .Values.keda.enabled }}
        - name: AIRFLOW__CELERY__WORKER_CONCURRENCY
          value: "{{ .Values.airflow.celery.workerConcurrency }}"
        {{- end }}
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /opt/airflow/dags
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://{{ .Values.postgres.config.username }}:{{ .Values.postgres.config.password }}@{{ .Values.postgres.name }}:5432/test
        - name: AIRFLOW__LOGGING__REMOTE_LOGGING
          value: 'False'
      image: controlplanecorporation/celery:v1
      inheritEnv: false
      ports: []
      volumes:
        - path: /opt/airflow
          recoveryPolicy: retain
          uri: cpln://volumeset/airflow
  {{- if .Values.keda.enabled }}
  defaultOptions:
      autoscaling:
        keda:
          cooldownPeriod: {{ .Values.keda.cooldownPeriod }}
          initialCooldownPeriod: {{ .Values.keda.initialCooldownPeriod }}
          pollingInterval: {{ .Values.keda.pollingInterval }}
          triggers:
            - name: redis-trigger
              type: redis
              metadata:
                address: {{ .Values.redis.name }}.{{ .Values.gvc.name }}.cpln.local:6379
                listLength: "{{ .Values.keda.listLength }}"
                listName: default
        maxConcurrency: 0
        maxScale: {{ .Values.keda.maxScale }}
        metric: keda
        minScale: {{ .Values.keda.minScale }}
        scaleToZeroDelay: {{ .Values.keda.scaleToZeroDelay }}
      capacityAI: false
      debug: false
      suspend: false
      timeoutSeconds: 5
  {{- end }}        
  firewallConfig:
    external:
      inboundAllowCIDR:
        - 0.0.0.0/0
      inboundBlockedCIDR: []
      outboundAllowCIDR:
        - 0.0.0.0/0
      outboundAllowHostname: []
      outboundAllowPort: []
      outboundBlockedCIDR: []
    internal:
      inboundAllowType: same-gvc
      inboundAllowWorkload: []
  loadBalancer:
    direct:
      enabled: false
      ports: []
    replicaDirect: false
  supportDynamicTags: false
