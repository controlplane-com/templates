---
kind: secret
name: clickhouse-keeper-startup
description: Clickhouse keeper startup script
type: opaque
data:
  encoding: plain
  payload: |-
    #!/usr/bin/env bash
    set -euo pipefail

    # --- Replica info ---
    LOCATION=$(basename "${CPLN_LOCATION:-}")
    HOSTNAME=${HOSTNAME:-}
    GVC="{{ .Values.gvc.name }}"
    WORKLOAD_NAME="{{ .Release.Name }}-keeper"
    REPLICA_INDEX=$(echo "${HOSTNAME}" | awk -F'-' '{print $NF}')
    SELF_FQDN="replica-${REPLICA_INDEX}.${WORKLOAD_NAME}.${LOCATION}.${GVC}.cpln.local"

    # --- Directories ---
    CONFIG_DIR="/etc/clickhouse-keeper"
    CONFIG_FILE="$CONFIG_DIR/config.xml"
    LOG_DIR="/var/log/clickhouse-keeper"
    DATA_DIR="/var/lib/clickhouse/coordination"

    mkdir -p "$CONFIG_DIR" "$LOG_DIR" "$DATA_DIR/logs" "$DATA_DIR/snapshots"

    # --- Prepare locations and replica counts from Helm values ---
    # Rendered by Helm as a simple string at chart render time
    IFS=',' read -r -a LOCATIONS <<< "${LOCATIONS_STR:-}"

    LOCATIONS=("${LOCATIONS[@]:-}")

    # --- Generate config ---
    cat > "$CONFIG_FILE" <<EOF
    <clickhouse>
        <logger>
            <level>information</level>
            <log>$LOG_DIR/clickhouse-keeper.log</log>
            <errorlog>$LOG_DIR/clickhouse-keeper.err.log</errorlog>
            <size>1000M</size>
            <count>3</count>
        </logger>
    EOF

    # --- Compute current global server ID ---
    CURRENT_SERVER_ID=0
    SERVER_ID=1

    if [ "${#LOCATIONS[@]}" -gt 0 ]; then
        for LOC_PAIR in "${LOCATIONS[@]}"; do
            LOC="${LOC_PAIR%%:*}"
            REPLICAS="${LOC_PAIR##*:}"

            for IDX in $(seq 0 $((REPLICAS-1))); do
                if [[ "$LOC" == "$LOCATION" && "$IDX" == "$REPLICA_INDEX" ]]; then
                    CURRENT_SERVER_ID=$SERVER_ID
                fi
                SERVER_ID=$((SERVER_ID+1))
            done
        done
    fi

    # --- Write keeper_server section ---
    cat >> "$CONFIG_FILE" <<EOL
    <listen_host>0.0.0.0</listen_host>
    <keeper_server>
        <tcp_port>9181</tcp_port>
        <server_id>$CURRENT_SERVER_ID</server_id>
        <log_storage_path>$DATA_DIR/log</log_storage_path>
        <snapshot_storage_path>$DATA_DIR/snapshots</snapshot_storage_path>

        <coordination_settings>
            <operation_timeout_ms>10000</operation_timeout_ms>
            <session_timeout_ms>100000</session_timeout_ms>
            <raft_logs_level>information</raft_logs_level>
        </coordination_settings>

        <raft_configuration>
    EOL

    # --- Generate all <server> entries ---
    SERVER_ID=1
    if [ "${#LOCATIONS[@]}" -gt 0 ]; then
        for LOC_PAIR in "${LOCATIONS[@]}"; do
            LOC="${LOC_PAIR%%:*}"
            REPLICAS="${LOC_PAIR##*:}"

            for IDX in $(seq 0 $((REPLICAS-1))); do
                FQDN="replica-$IDX.${WORKLOAD_NAME}.${LOC}.${GVC}.cpln.local"
                cat >> "$CONFIG_FILE" <<EOL
            <server>
                <id>$SERVER_ID</id>
                <hostname>$FQDN</hostname>
                <port>9234</port>
            </server>
    EOL
                SERVER_ID=$((SERVER_ID+1))
            done
        done
    fi

    MYID_FILE="$DATA_DIR/myid"
    echo "$CURRENT_SERVER_ID" > "$MYID_FILE"
    echo "Created myid file with ID $CURRENT_SERVER_ID at $MYID_FILE"

    # --- Close XML ---
    cat >> "$CONFIG_FILE" <<EOF
        </raft_configuration>
    </keeper_server>
    </clickhouse>
    EOF

    echo "Generated Keeper config at $CONFIG_FILE:"
    cat "$CONFIG_FILE"

    exec clickhouse-keeper --config-file="$CONFIG_FILE"