---
kind: secret
name: {{ .Release.Name }}-clickhouse-keeper-startup
description: Clickhouse keeper startup script
tags: {{- include "clickhouse.tags" . | nindent 4 }}
type: opaque
data:
  encoding: plain
  payload: |-
    #!/usr/bin/env bash
    set -euo pipefail

    # --- Replica info ---
    LOCATION=$(basename "${CPLN_LOCATION:-}")
    HOSTNAME=${HOSTNAME:-}
    GVC="{{ .Values.gvc.name }}"
    WORKLOAD_NAME="{{ .Release.Name }}-keeper"
    REPLICA_INDEX=$(echo "${HOSTNAME}" | awk -F'-' '{print $NF}')
    SELF_FQDN="replica-${REPLICA_INDEX}.${WORKLOAD_NAME}.${LOCATION}.${GVC}.cpln.local"

    # --- Directories ---
    CONFIG_DIR="/etc/clickhouse-keeper"
    CONFIG_FILE="$CONFIG_DIR/config.xml"
    LOG_DIR="/var/log/clickhouse-keeper"
    DATA_DIR="/var/lib/clickhouse/coordination"

    mkdir -p "$CONFIG_DIR" "$LOG_DIR" "$DATA_DIR/logs" "$DATA_DIR/snapshots"

    # --- Prepare locations from Helm values ---
    IFS=',' read -r -a LOCATIONS <<< "${LOCATIONS_STR:-}"

    # --- Compute CURRENT_SERVER_ID ---
    CURRENT_SERVER_ID=0
    SERVER_ID=1
    for LOC_PAIR in "${LOCATIONS[@]:0:3}"; do   # only first 3 locations
        LOC="${LOC_PAIR%%:*}"
        if [[ "$LOC" == "$LOCATION" && "$REPLICA_INDEX" == "0" ]]; then
            CURRENT_SERVER_ID=$SERVER_ID
        fi
        SERVER_ID=$((SERVER_ID+1))
    done

    # --- Start config.xml ---
    cat > "$CONFIG_FILE" <<EOF
    <clickhouse>
        <logger>
            <level>information</level>
            <log>$LOG_DIR/clickhouse-keeper.log</log>
            <errorlog>$LOG_DIR/clickhouse-keeper.err.log</errorlog>
            <size>1000M</size>
            <count>3</count>
        </logger>

        <listen_host>0.0.0.0</listen_host>
        <keeper_server>
            <tcp_port>9181</tcp_port>
            <server_id>$CURRENT_SERVER_ID</server_id>
            <log_storage_path>$DATA_DIR/log</log_storage_path>
            <snapshot_storage_path>$DATA_DIR/snapshots</snapshot_storage_path>

            <coordination_settings>
                <operation_timeout_ms>20000</operation_timeout_ms>
                <session_timeout_ms>100000</session_timeout_ms>
                <raft_logs_level>information</raft_logs_level>
                <election_timeout_lower_bound_ms>20000</election_timeout_lower_bound_ms>
                <election_timeout_upper_bound_ms>100000</election_timeout_upper_bound_ms>
            </coordination_settings>

            <raft_configuration>
    EOF

    # --- Generate only 3 keeper replicas (replica-0 for first 3 locations) ---
    SERVER_ID=1
    for LOC_PAIR in "${LOCATIONS[@]:0:3}"; do
        LOC="${LOC_PAIR%%:*}"
        FQDN="replica-0.${WORKLOAD_NAME}.${LOC}.${GVC}.cpln.local"

        cat >> "$CONFIG_FILE" <<EOL
                <server>
                    <id>$SERVER_ID</id>
                    <hostname>$FQDN</hostname>
                    <port>9234</port>
                </server>
    EOL

        SERVER_ID=$((SERVER_ID+1))
    done

    # --- Write myid file ---
    MYID_FILE="$DATA_DIR/myid"
    echo "$CURRENT_SERVER_ID" > "$MYID_FILE"
    echo "Created myid file with ID $CURRENT_SERVER_ID at $MYID_FILE"

    # --- Close XML ---
    cat >> "$CONFIG_FILE" <<EOF
            </raft_configuration>
        </keeper_server>
    </clickhouse>
    EOF

    echo "Generated Keeper config at $CONFIG_FILE:"
    cat "$CONFIG_FILE"

    exec clickhouse-keeper --config-file="$CONFIG_FILE"
