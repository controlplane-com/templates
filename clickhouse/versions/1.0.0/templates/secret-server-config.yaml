---
kind: secret
name: clickhouse-server-startup
description: Clickhouse server startup script
type: opaque
data:
  encoding: plain
  payload: |-
    #!/usr/bin/env bash
    set -euo pipefail

    # --- Runtime variables ---
    LOCATION=$(basename "${CPLN_LOCATION:-}")
    HOSTNAME=${HOSTNAME:-}
    GVC="{{ .Values.gvc.name }}"
    WORKLOAD_NAME="{{ .Release.Name }}-server"
    KEEPER_WORKLOAD_NAME="{{ .Release.Name }}-keeper"
    REPLICA_INDEX=$(echo "${HOSTNAME}" | awk -F'-' '{print $NF}')
    SELF_FQDN="replica-${REPLICA_INDEX}.${WORKLOAD_NAME}.${LOCATION}.${GVC}.cpln.local"

    echo "Starting ClickHouse server for replica ${SELF_FQDN}"

    # --- Directories ---
    CONFIG_DIR="/etc/clickhouse-server"
    LOG_DIR="/var/log/clickhouse-server"
    DATA_DIR="/var/lib/clickhouse"

    mkdir -p "$CONFIG_DIR" "$LOG_DIR" "$DATA_DIR"

    # --- Parse locations and replicas ---
    IFS=',' read -r -a LOCATIONS <<< "${LOCATIONS_STR:-}"

    # --- Compute SHARD_INDEX for this node ---
    SHARD_INDEX=1
    SERVER_COUNTER=1
    for LOC_PAIR in "${LOCATIONS[@]}"; do
        LOC="${LOC_PAIR%%:*}"
        REPLICAS="${LOC_PAIR##*:}"
        for IDX in $(seq 0 $((REPLICAS-1))); do
            if [[ "$LOC" == "$LOCATION" && "$IDX" == "$REPLICA_INDEX" ]]; then
                SHARD_INDEX=$SERVER_COUNTER
            fi
            SERVER_COUNTER=$((SERVER_COUNTER+1))
        done
    done

    # --- Generate config.xml ---
    cat > "$CONFIG_DIR/config.xml" <<EOF
    <clickhouse>

        <!-- Users config -->
        <users_config>/etc/clickhouse-server/users.xml</users_config>

        <!-- Logging -->
        <logger>
            <level>information</level>
            <log>$LOG_DIR/clickhouse-server.log</log>
            <errorlog>$LOG_DIR/clickhouse-server.err.log</errorlog>
        </logger>

        <!-- Ports -->
        <tcp_port>9000</tcp_port>
        <http_port>8123</http_port>

        <!-- Listen on all interfaces -->
        <listen_host>0.0.0.0</listen_host>
        <listen_host>::</listen_host>

        <!-- Display name -->
        <display_name>$WORKLOAD_NAME node $REPLICA_INDEX</display_name>

        <!-- Remote servers / cluster -->
        <remote_servers>
            <my_cluster>
    EOF

    # --- Add shards and replicas ---
    for LOC_PAIR in "${LOCATIONS[@]}"; do
        LOC="${LOC_PAIR%%:*}"
        REPLICAS="${LOC_PAIR##*:}"
        {
            echo "            <shard>"
            echo "                <internal_replication>true</internal_replication>"
            for IDX in $(seq 0 $((REPLICAS-1))); do
                FQDN="replica-$IDX.${WORKLOAD_NAME}.${LOC}.${GVC}.cpln.local"
                echo "                <replica>"
                echo "                    <host>$FQDN</host>"
                echo "                    <port>9000</port>"
                echo "                </replica>"
            done
            echo "            </shard>"
        } >> "$CONFIG_DIR/config.xml"
    done

    # --- Close remote_servers ---
    {
        echo "        </my_cluster>"
        echo "    </remote_servers>"
    } >> "$CONFIG_DIR/config.xml"

        # --- Zookeeper nodes ---
    {
    echo "  <zookeeper>"
    for LOC in "${LOCATIONS[@]:0:3}"; do       # only first 3 locations
        LOC_NAME="${LOC%%:*}"
        FQDN="replica-0.${KEEPER_WORKLOAD_NAME}.${LOC_NAME}.${GVC}.cpln.local"
        echo "    <node>"
        echo "      <host>$FQDN</host>"
        echo "      <port>9181</port>"
        echo "    </node>"
    done
    echo "  </zookeeper>"
    } >> "$CONFIG_DIR/config.xml"

    # --- Distributed DDL ---
    {
    echo "  <distributed_ddl>"
    echo "    <path>/clickhouse/distributed_ddl/</path>"
    echo "    <zookeeper>"
    for LOC in "${LOCATIONS[@]:0:3}"; do
        LOC_NAME="${LOC%%:*}"
        FQDN="replica-0.${KEEPER_WORKLOAD_NAME}.${LOC_NAME}.${GVC}.cpln.local"
        echo "      <node>"
        echo "        <host>$FQDN</host>"
        echo "        <port>9181</port>"
        echo "      </node>"
    done
    echo "    </zookeeper>"
    echo "  </distributed_ddl>"
    } >> "$CONFIG_DIR/config.xml"
    # --- Macros ---
    {
        echo "    <macros>"
        printf "        <shard>%02d</shard>\n" "$SHARD_INDEX"
        printf "        <replica>%02d</replica>\n" "$REPLICA_INDEX"
        echo "    </macros>"
    } >> "$CONFIG_DIR/config.xml"

    # --- Close XML ---
    echo "</clickhouse>" >> "$CONFIG_DIR/config.xml"

    echo "Generated ClickHouse config at $CONFIG_DIR/config.xml"

    # --- Start ClickHouse server ---
    exec clickhouse-server --config-file="$CONFIG_DIR/config.xml"