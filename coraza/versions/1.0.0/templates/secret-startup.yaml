---
kind: secret
name: {{ .Release.Name }}-coraza-startup
description: Coraza WAF startup script
type: opaque
data:
  encoding: plain
  payload: >
      #!/bin/sh

      set -u


      ADMIN_URL="127.0.0.1"

      ADMIN_PORT="2019"

      ROUTE_PATH="/config/apps/http/servers/srv0/routes/0/handle/"

      PATCH_FILE="/tmp/proxy_patch.json"


      echo "[INFO] Waiting for Caddy admin API..."

      until wget -q --spider "http://${ADMIN_URL}:${ADMIN_PORT}/config/"
      2>/dev/null; do
        sleep 1
      done

      echo "[INFO] Caddy admin API is up."


      cat > "${PATCH_FILE}" <<'EOF'

      [
        {
          "handler": "waf",
          "include": [
            "/opt/coraza/config/coraza.conf",
            "/opt/coraza/config.d/*.conf",
            "/opt/coraza/config/crs-setup.conf",
            "/opt/coraza/owasp-crs/plugins/*-config.conf",
            "/opt/coraza/owasp-crs/plugins/*-before.conf",
            "/opt/coraza/plugins/*-config.conf",
            "/opt/coraza/plugins/*-before.conf",
            "/opt/coraza/owasp-crs/rules/*.conf",
            "/opt/coraza/owasp-crs/plugins/*-after.conf",
            "/opt/coraza/plugins/*-after.conf",
            "/opt/coraza/rules/*.conf",
            "/opt/coraza/rules.d/*.conf",
            "/opt/coraza/overrides/*.conf",
            "/opt/coraza/data/*.conf",
            "/opt/coraza/tmp/*.conf"
          ]
        },
        {
          "handler": "headers",
          "request": {
            "set": {
              "Host": ["test-app.test-gvc.cpln.local"]
            }
          }
        },
        {
          "handler": "reverse_proxy",
          "upstreams": [
            { "dial": "test-app.test-gvc.cpln.local:8080" }
          ]
        }
      ]

      EOF


      echo "[INFO] Applying PATCH via netcat..."

      LEN=$(wc -c < "${PATCH_FILE}")


      # Run nc but don’t abort if it returns non-zero

      RESPONSE=$(
        {
          echo "PATCH ${ROUTE_PATH} HTTP/1.1"
          echo "Host: ${ADMIN_URL}:${ADMIN_PORT}"
          echo "Content-Type: application/json"
          echo "Content-Length: ${LEN}"
          echo
          cat "${PATCH_FILE}"
          echo
        } | nc ${ADMIN_URL} ${ADMIN_PORT} || true
      )


      echo "$RESPONSE"


      if echo "$RESPONSE" | grep -q "200 OK"; then
        echo "[INFO] Patch succeeded."
      else
        echo "[WARN] Patch may have failed — see response above."
      fi


      rm -f "${PATCH_FILE}"