kind: workload
name: {{ .Release.Name }}-coraza-waf
description: Coraza-waf
tags: {}
spec:
  type: standard
  containers:
    - name: coraza-crs
      cpu: 50m
      env:
        - name: ACCESSLOG
          value: /dev/stdout
        - name: BACKEND
          value: http://{{ .Values.targetWorkload }}:{{ .Values.targetPort }}
        - name: CORAZA_AUDIT_LOG
          value: /dev/stdout
        - name: CORAZA_AUDIT_LOG_PARTS
          value: ABDEFHIJZ
        - name: CORAZA_DEBUG_LOG
          value: /dev/stdout
        - name: CORAZA_DEBUG_LOGLEVEL
          value: '1'
        - name: CORAZA_RULE_ENGINE
          value: 'On'
        - name: PORT
          value: "{{ .Values.WAFPort }}"
      image: >-
        ghcr.io/coreruleset/coraza-crs@sha256:eed7280e0de4820507b500b1ee10de820c175165d5cce329609bf34f32977af8
      inheritEnv: false
      lifecycle:
        postStart:
          exec:
            command:
              - /bin/sh
              - /opt/coraza/startup.sh
      memory: 128Mi
      ports:
        - number: {{ .Values.WAFPort }}
          protocol: http
      volumes:
        - path: /opt/coraza/rules.d/custom.conf
          recoveryPolicy: retain
          uri: cpln://secret/{{ .Release.Name }}-coraza-custom-rules.payload
        - path: /opt/coraza/startup.sh
          recoveryPolicy: retain
          uri: cpln://secret/{{ .Release.Name }}-coraza-startup.payload
  defaultOptions:
    multiZone:
      enabled: {{ .Values.multiZone }}
    autoscaling:
      keda:
        cooldownPeriod: 1
        initialCooldownPeriod: 1
        pollingInterval: 1
        triggers: []
      maxConcurrency: 0
      maxScale: 3
      metric: cpu
      minScale: 1
      scaleToZeroDelay: 300
      target: 100
    capacityAI: false
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR:
        - 0.0.0.0/0
      inboundBlockedCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
      outboundBlockedCIDR: []
    internal:
      inboundAllowType: same-gvc
      inboundAllowWorkload: []
  identityLink: //gvc/{{ .Values.global.cpln.gvc }}/identity/{{ .Release.Name }}-coraza-identity
  loadBalancer:
    direct:
      enabled: false
      ports: []
    replicaDirect: false
  supportDynamicTags: false
