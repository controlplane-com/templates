kind: workload
name: {{ include "mongo.name" . }}
gvc: {{ .Values.cpln.gvc }}
tags:
  {{- include "mongo.tags" . | nindent 2 }}
spec:
  type: stateful
  identityLink: //identity/{{ include "mongo.name" . }}
  containers:
    - name: mongo
      env:
        - name: MONGO_INITDB_DATABASE
          value: test
        - name: MONGO_INITDB_PWD
          value: 'cpln://secret/{{ include "mongo.secretName" . }}.password'
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: 'cpln://secret/{{ include "mongo.secretName" . }}.password'
        - name: MONGO_INITDB_ROOT_USERNAME
          value: 'cpln://secret/{{ include "mongo.secretName" . }}.username'
        - name: MONGO_INITDB_USER
          value: 'cpln://secret/{{ include "mongo.secretName" . }}.username'
      image: 'mongo:6.0'
      inheritEnv: false
      cpu: {{ .Values.resources.cpu }}
      memory: {{ .Values.resources.memory }}
      ports:
        - number: 27017
          protocol: tcp
      volumes:
        - path: /data/db
          uri: 'cpln://volumeset/{{ include "mongo.name" . }}'
  defaultOptions:
    autoscaling:
      metric: disabled
      minScale: 1
      maxScale: 1
    capacityAI: false
  firewallConfig:
    external:
      outboundAllowCIDR:
        - 0.0.0.0/0
    internal:
      inboundAllowType: same-gvc
  loadBalancer:
    direct:
      enabled: {{ .Values.directLoadBalancer.enabled }}
      ports:
        - containerPort: 27017
          externalPort: 27017
          protocol: TCP
          scheme: tcp