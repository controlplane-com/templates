kind: secret
name: {{ .Values.proxyWorkload.name }}-conf
description: {{ .Values.proxyWorkload.name }}-conf
tags:
  {{- include "nginx.tags" . | nindent 4 }}
type: opaque
data:
  encoding: plain
  payload: |-
    user nginx;
    worker_processes auto;

    events {
      worker_connections 1024;
    }

    http {
      server {
        listen 80 default_server;

        location /health {
          return 200 '{"success":true,"message":"OK"}';
        }

        location /fail {
          return 500 '{"success":false,"message":"Error"}';
        }

{{- range .Values.locations }}
        location {{ .regexModifier }} {{ .path }} {
          proxy_pass http://{{ .workload }}.{{ $.Values.gvc }}.cpln.local:{{ .port }};
          proxy_http_version 1.1;
          proxy_set_header Host {{ .workload }}.{{ $.Values.gvc }}.cpln.local;
          proxy_intercept_errors on;
          error_page 500 502 503 504 /fail;
        }
{{- end }}

      }
    }
