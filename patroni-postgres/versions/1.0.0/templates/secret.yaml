kind: secret
name: {{ .Release.Name }}-postgres-config
description: {{ .Release.Name }} postgres config
type: dictionary
data:
  username: {{ .Values.postgres.username }}
  password: {{ .Values.postgres.password }}

---
kind: secret
name: {{ .Release.Name }}-patroni-startup
description: {{ .Release.Name }} patroni startup script
type: opaque
data:
  encoding: plain
  payload: |-
    #!/bin/bash
    set -euo pipefail

    # --- dynamic env vars ---
    LOCATION=$(basename "${CPLN_LOCATION}")
    HOSTNAME=${HOSTNAME}

    REPLICA_INDEX=$(echo "${HOSTNAME}" | awk -F'-' '{print $NF}')
    WORKLOAD_NAME=$(echo "${HOSTNAME}" | sed 's/-[0-9]*$//')
    PATRONI_NAME="${WORKLOAD_NAME}-${REPLICA_INDEX}"
    PATRONI_RESTAPI_CONNECT_ADDRESS="${PATRONI_NAME}.${WORKLOAD_NAME}.${LOCATION}.{{ .Values.global.cpln.gvc }}.cpln.local:8008"

    PATRONI_ETCD3_HOSTS=""
    for i in $(seq 0 $(( {{ .Values.etcd.replicas }} - 1 )) ); do
        host="replica-${i}.{{ .Release.Name }}.${LOCATION}.{{ .Values.global.cpln.gvc }}.cpln.local:2379"
        if [[ -z "$PATRONI_ETCD3_HOSTS" ]]; then
            PATRONI_ETCD3_HOSTS="$host"
        else
            PATRONI_ETCD3_HOSTS="${PATRONI_ETCD3_HOSTS},$host"
        fi
    done

    export PATRONI_NAME
    export PATRONI_RESTAPI_CONNECT_ADDRESS
    export PATRONI_ETCD3_HOSTS
    export PGDATA="/var/lib/postgresql/data/pgdata"
    export PGDATABASE="{{ .Values.postgres.database }}"
    export PGUSER_SUPERUSER="cpln://secret/{{ .Release.Name }}-postgres-config.username"
    export PGPASSWORD_SUPERUSER="cpln://secret/{{ .Release.Name }}-postgres-config.password"

    echo "Starting Patroni node '${PATRONI_NAME}' with ETCD endpoints: ${PATRONI_ETCD3_HOSTS}"

    # --- generate minimal Patroni config dynamically ---
    CONFIG_FILE="/tmp/patroni_config.yml"
    cat > "$CONFIG_FILE" <<EOF
    scope: production-cluster
    namespace: /db/
    name: ${PATRONI_NAME}

    restapi:
      listen: 0.0.0.0:8008
      connect_address: ${PATRONI_RESTAPI_CONNECT_ADDRESS}

    etcd3:
      host: ${PATRONI_ETCD3_HOSTS}

    postgresql:
      listen: 0.0.0.0:5432
      connect_address: ${PATRONI_NAME}.${WORKLOAD_NAME}.${LOCATION}.{{ .Values.global.cpln.gvc }}.cpln.local:5432
      data_dir: ${PGDATA}
      bin_dir: /usr/lib/postgresql/17/bin
      parameters:
        max_connections: 100
        shared_buffers: 128MB
    EOF


    # --- finally, run Patroni with this config ---
    exec patroni "$CONFIG_FILE"
