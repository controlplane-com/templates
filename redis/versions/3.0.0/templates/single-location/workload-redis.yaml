{{- if .Values.locations }}
{{- else }}
kind: workload
name: {{ .Release.Name }}-redis
spec:
  type: stateful
  containers:
    - name: redis
      env:
      {{- if .Values.redis.env }}
{{ toYaml .Values.redis.env | indent 8 }}
      {{- else }}
        []
      {{- end }}
      args:
        - '-c'
        - |-
          mkdir /etc/redis

          cp /config/redis.conf /etc/redis/redis.conf

          {{- if and (hasKey .Values.redis "publicAccess") .Values.redis.publicAccess.enabled }}
          POD_ID=$(echo "$POD_NAME" | rev | cut -d'-' -f 1 | rev)
          PORT=$((6380 + POD_ID))
          echo "\nport $PORT" >> /etc/redis/redis.conf
          echo "\nreplica-announce-ip {{ .Values.redis.publicAccess.address }}" >> /etc/redis/redis.conf
          echo "\nreplica-announce-port $PORT" >> /etc/redis/redis.conf
          {{ else }}
          echo "\nport 6379" >> /etc/redis/redis.conf
          echo "\nreplica-announce-ip ${HOSTNAME}.{{ .Release.Name }}-redis" >> /etc/redis/redis.conf
          echo "\nreplica-announce-port 6379" >> /etc/redis/redis.conf
          {{ end }}

          if [ "$(hostname)" = "{{ .Release.Name }}-redis-0" ]; then
            {{ .Values.redis.serverCommand }} /etc/redis/redis.conf --dir {{ .Values.redis.dataDir }}
          else
            {{- if and (hasKey .Values.redis "publicAccess") .Values.redis.publicAccess.enabled }}
            {{ .Values.redis.serverCommand }} /etc/redis/redis.conf --dir {{ .Values.redis.dataDir }} --replicaof {{ .Values.redis.publicAccess.address }} 6380
            {{- else }}
            {{ .Values.redis.serverCommand }} /etc/redis/redis.conf --dir {{ .Values.redis.dataDir }} --replicaof {{ .Release.Name }}-redis-0.{{ .Release.Name }}-redis 6379
            {{- end }}
          fi
      command: /bin/sh
      cpu: {{ .Values.redis.resources.cpu }}
      memory: {{ .Values.redis.resources.memory }}
      minCpu: {{ .Values.redis.resources.minCpu }}
      minMemory: {{ .Values.redis.resources.minMemory }}
      image: {{ .Values.redis.image }}
      inheritEnv: false
      ports:
{{- if and (hasKey .Values.redis "publicAccess") .Values.redis.publicAccess.enabled }}
    {{- $startPort := 6380 }}
    {{- $replicas := $.Values.redis.replicas | int }}
    {{- range $replicaIndex := until $replicas }}
        - number: {{ add $startPort $replicaIndex }}
          protocol: tcp
    {{- end }}
{{- else }}
        - number: 6379
          protocol: tcp
{{- end }}
      volumes:
        - path: /config/redis.conf
          recoveryPolicy: retain
          uri: cpln://secret/{{ .Release.Name }}-redis-config
        {{- if and (hasKey .Values.redis "persistence") .Values.redis.persistence.enabled }}
        - path: {{ .Values.redis.dataDir }}
          recoveryPolicy: retain
          uri: cpln://volumeset/{{ .Release.Name }}-redis
        {{- end }}
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      metric: disabled
      minScale: {{ .Values.redis.replicas }}
      maxScale: {{ .Values.redis.replicas }}
      scaleToZeroDelay: 300
      target: 100
    capacityAI: false
    debug: false
    suspend: false
    timeoutSeconds: {{ .Values.redis.timeoutSeconds }}
    {{- if .Values.redis.multiZone }}
    multiZone:
      enabled: true
    {{- else }}
    multiZone:
      enabled: false
    {{- end }}
{{- if .Values.redis.firewall }}
  firewallConfig:
    {{- if or (hasKey .Values.redis.firewall "external_inboundAllowCIDR") (hasKey .Values.redis.firewall "external_outboundAllowCIDR") }}
    external:
      inboundAllowCIDR: {{- if .Values.redis.firewall.external_inboundAllowCIDR }}{{ .Values.redis.firewall.external_inboundAllowCIDR | splitList "," | toYaml | nindent 8 }}{{- else }} []{{- end }}
      outboundAllowCIDR: {{- if .Values.redis.firewall.external_outboundAllowCIDR }}{{ .Values.redis.firewall.external_outboundAllowCIDR | splitList "," | toYaml | nindent 8 }}{{- else }} []{{- end }}
    {{- end }}
    {{- if hasKey .Values.redis.firewall "internal_inboundAllowType" }}
    internal:
      inboundAllowType: {{ default "[]" .Values.redis.firewall.internal_inboundAllowType }}
      {{- if .Values.redis.firewall.inboundAllowWorkload }}
      inboundAllowWorkload: {{ .Values.redis.firewall.inboundAllowWorkload | toYaml | nindent 8 }}
      {{- end }}
    {{- end }}
{{- end }}
  identityLink: //gvc/{{ .Values.cpln.gvc }}/identity/{{ .Release.Name }}-redis
{{- if and (hasKey .Values.redis "publicAccess") .Values.redis.publicAccess.enabled }}
  loadBalancer:
    replicaDirect: true
{{- else }}
  loadBalancer:
    replicaDirect: false
{{- end }}
{{- end }}
