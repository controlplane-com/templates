---
kind: secret
name: tidb-server-startup
description: TiDB server startup script
type: opaque
data:
  encoding: plain
  payload: |-
    #!/usr/bin/env bash
    set -euo pipefail

    # Runtime environment from Control Plane
    LOCATION=$(basename "${CPLN_LOCATION}")
    HOSTNAME=${HOSTNAME}
    GVC="{{ .Values.gvc.name }}"

    # Extract replica index + workload from HOSTNAME
    REPLICA_INDEX=$(echo "${HOSTNAME}" | awk -F'-' '{print $NF}')
    WORKLOAD_NAME="{{ .Release.Name }}-server"

    # Self FQDN
    SELF_FQDN="replica-${REPLICA_INDEX}.${WORKLOAD_NAME}.${LOCATION}.${GVC}.cpln.local"

    # Build PD endpoints dynamically (only replica-0 per location)
    JOIN_PDS=""
    LOCATIONS="{{ range .Values.gvc.locations }}{{ .name }} {{ end }}"
    for loc in $LOCATIONS; do
        pd_host="replica-0.{{ .Release.Name }}-pd.${loc}.${GVC}.cpln.local:2379"
        JOIN_PDS="${JOIN_PDS},${pd_host}"
    done
    JOIN_PDS=${JOIN_PDS#,}  # remove leading comma

    echo "Generating tidb.toml for $SELF_FQDN with PD endpoints: $JOIN_PDS"

    # Create /etc/tidb directory if it doesn't exist
    mkdir -p /etc/tidb

    # Generate the config file
    cat > /etc/tidb/tidb.toml <<EOF
    [log]
    level = "info"

    [server]
    addr = "0.0.0.0:4000"
    status-addr = "0.0.0.0:10080"

    [security]

    [pd]
    endpoints = ["${JOIN_PDS//,/\",\"}"]

    lease = "45s"
    EOF

    echo "tidb.toml generated successfully at /etc/tidb/tidb.toml"

    # Start TiDB server using the config file
    exec /tidb-server --config /etc/tidb/tidb.toml
