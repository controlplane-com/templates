---
kind: secret
name: tidb-server-startup
description: TiDB server startup script
type: opaque
data:
  encoding: plain
  payload: |-
    #!/usr/bin/env bash
    set -euo pipefail

    # Runtime environment from Control Plane
    LOCATION=$(basename "${CPLN_LOCATION}")
    HOSTNAME=${HOSTNAME}
    GVC="{{ .Values.gvc.name }}"

    REPLICA_INDEX=$(echo "${HOSTNAME}" | awk -F'-' '{print $NF}')
    WORKLOAD_NAME="{{ .Release.Name }}-server"

    SELF_FQDN="replica-${REPLICA_INDEX}.${WORKLOAD_NAME}.${LOCATION}.${GVC}.cpln.local"

    # Build PD endpoints dynamically
    JOIN_PDS=""
    LOCATIONS="{{ range .Values.gvc.locations }}{{ .name }} {{ end }}"
    for loc in $LOCATIONS; do
        pd_host="replica-0.{{ .Release.Name }}-pd.${loc}.${GVC}.cpln.local:2379"
        JOIN_PDS="${JOIN_PDS},${pd_host}"
    done
    JOIN_PDS=${JOIN_PDS#,}

    mkdir -p /etc/tidb

    cat > /etc/tidb/tidb.toml <<EOF
    lease = "45s"

    [log]
    level = "info"

    [status]
    status-host = "0.0.0.0"
    status-port = 10080

    EOF

    ROOT_PW="$ROOT_PW"
    APP_USER="$APP_USER"
    APP_PW="$APP_PW"
    APP_DB="$APP_DB"

    mkdir -p /etc/tidb/init
    cat > /etc/tidb/init/init.sql <<EOF
    ALTER USER 'root'@'%' IDENTIFIED BY '${ROOT_PW}';

    CREATE DATABASE IF NOT EXISTS \`${APP_DB}\`;
    CREATE USER IF NOT EXISTS '${APP_USER}'@'%' IDENTIFIED BY '${APP_PW}';
    GRANT ALL PRIVILEGES ON \`${APP_DB}\`.* TO '${APP_USER}'@'%';
    FLUSH PRIVILEGES;
    EOF
    echo "Running exec /tidb-server --config /etc/tidb/tidb.toml --path="${JOIN_PDS}" --store="tikv" --initialize-sql-file=/etc/tidb/init/init.sql"

    exec /tidb-server --config /etc/tidb/tidb.toml --path="${JOIN_PDS}" --store="tikv" --advertise-address="${WORKLOAD_NAME}.${GVC}.cpln.local" --initialize-sql-file=/etc/tidb/init/init.sql
