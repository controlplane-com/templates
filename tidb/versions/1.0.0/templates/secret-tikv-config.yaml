---
kind: secret
name: tidb-tikv-startup
description: TiDB tikv startup script
type: opaque
data:
  encoding: plain
  payload: |-
    #!/usr/bin/env bash
    set -euo pipefail

    # Runtime environment from Control Plane
    LOCATION=$(basename "${CPLN_LOCATION}")
    HOSTNAME=${HOSTNAME}
    GVC="{{ .Values.gvc.name }}"

    # Extract replica index + workload from HOSTNAME
    REPLICA_INDEX=$(echo "${HOSTNAME}" | awk -F'-' '{print $NF}')
    WORKLOAD_NAME="{{ .Release.Name }}-tikv"

    # Self FQDN for advertise
    SELF_FQDN="replica-${REPLICA_INDEX}.${WORKLOAD_NAME}.${LOCATION}.${GVC}.cpln.local"

    # Build PD endpoints (only index 0 replica per location)
    PD_ENDPOINTS=""
    LOCATIONS="{{ range .Values.gvc.locations }}{{ .name }} {{ end }}"
    for loc in $LOCATIONS; do
        endpoint="replica-0.{{ .Release.Name }}-pd.${loc}.${GVC}.cpln.local:2379"
        PD_ENDPOINTS="${PD_ENDPOINTS},${endpoint}"
    done
    PD_ENDPOINTS=${PD_ENDPOINTS#,}  # remove leading comma

    echo "Generating tikv.toml for $SELF_FQDN with PD endpoints: $PD_ENDPOINTS"

    # Create /etc/tikv directory if it doesn't exist
    mkdir -p /etc/tikv

    # Generate the config file
    cat > /etc/tikv/tikv.toml <<EOF
    [server]
    addr = "0.0.0.0:20160"
    advertise-addr = "${SELF_FQDN}:20160"

    [storage]
    data-dir = "/data"

    [pd]
    endpoints = ["${PD_ENDPOINTS//,/\",\"}"]

    [rocksdb]

    [raftstore]
    EOF

    echo "tikv.toml generated successfully at /etc/tikv/tikv.toml"

    # Start TiKV server using the config file
    exec /tikv-server --config /etc/tikv/tikv.toml